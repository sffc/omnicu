// @generated
/// Implement `DataProvider<IndianYearNamesV1Marker>` on the given struct using the data
/// hardcoded in this file. This allows the struct to be used with
/// `icu`'s `_unstable` constructors.
#[doc(hidden)]
#[macro_export]
macro_rules! __impl_datetime_symbols_indian_years_v1 {
    ($ provider : ty) => {
        #[clippy::msrv = "1.67"]
        const _: () = <$provider>::MUST_USE_MAKE_PROVIDER_MACRO;
        #[clippy::msrv = "1.67"]
        impl icu_provider::DataProvider<icu::datetime::provider::neo::IndianYearNamesV1Marker> for $provider {
            fn load(&self, req: icu_provider::DataRequest) -> Result<icu_provider::DataResponse<icu::datetime::provider::neo::IndianYearNamesV1Marker>, icu_provider::DataError> {
                static FY_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0SAKA") })
                });
                static AF_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0Saka") })
                });
                static FI_X_5: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0Saka-ajanlaskua") })
                });
                static SV_X_5: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0Saka-eran") })
                });
                static FR_X_5: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xC3\xA8re Saka") })
                });
                static CS_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xC5\xA0aka") })
                });
                static EL_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xCE\xA3\xCE\xAC\xCE\xBA\xCE\xB1") })
                });
                static BS_CYRL_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xA1\xD0\x90\xD0\x9A\xD0\x90") })
                });
                static MK_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD0\xA1\xD0\xB0\xD0\xBA\xD0\xB0") })
                });
                static HE_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD7\xA1\xD7\x90\xD7\xA7\xD7\x90") })
                });
                static FA_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD8\xAA\xD9\x82\xD9\x88\xDB\x8C\xD9\x85 \xD8\xB3\xD8\xA7\xDA\xA9\xD8\xA7") })
                });
                static KS_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD8\xB3\xD8\xA7\xDA\xA9\xD8\xA7") })
                });
                static SD_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xD8\xB3\xD8\xA7\xDA\xAA\xD8\xA7") })
                });
                static HI_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA4\xB6\xE0\xA4\x95") })
                });
                static NE_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA4\xB8\xE0\xA4\xBE\xE0\xA4\x95") })
                });
                static BRX_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA4\xB8\xE0\xA4\xBE\xE0\xA4\x95\xE0\xA4\xBE") })
                });
                static AS_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA6\xB6\xE0\xA6\x95") })
                });
                static BN_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA6\xB8\xE0\xA6\xBE\xE0\xA6\xB2") })
                });
                static PA_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xA8\xB8\xE0\xA8\xBE\xE0\xA8\x95\xE0\xA8\xBE") })
                });
                static GU_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xAA\xB6\xE0\xAA\x95") })
                });
                static GU_X_5: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xAA\xB8\xE0\xAA\xBE\xE0\xAA\x95\xE0\xAA\xBE") })
                });
                static OR_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xAC\xB8\xE0\xAC\xBE\xE0\xAC\x95\xE0\xAC\xBE") })
                });
                static TA_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xAE\x9A\xE0\xAE\xBE\xE0\xAE\x95\xE0\xAE\xBE") })
                });
                static TE_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xB0\xB6\xE0\xB0\x95") })
                });
                static KN_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xB2\xB6\xE0\xB2\x95") })
                });
                static ML_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xB4\xB6\xE0\xB4\x95") })
                });
                static TH_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xB8\xA1.\xE0\xB8\xA8.") })
                });
                static LO_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE0\xBA\xA1.\xE0\xBA\xAA.") })
                });
                static JA_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE3\x82\xB5\xE3\x82\xAB") })
                });
                static YUE_HANS_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE5\x8D\xB0\xE5\xBA\xA6\xE5\x8E\x86") })
                });
                static YUE_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xE5\x8D\xB0\xE5\xBA\xA6\xE6\x9B\x86") })
                });
                static FF_ADLM_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0\xF0\x9E\xA4\x85\xF0\x9E\xA4\xA2\xF0\x9E\xA4\xB3\xF0\x9E\xA4\xA2") })
                });
                static SC_X_5: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0era Saka") })
                });
                static ES_X_3: <icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable = icu::datetime::provider::neo::YearNamesV1::Eras(unsafe {
                    #[allow(unused_unsafe)]
                    zerovec::ZeroMap::from_parts_unchecked(unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") }, unsafe { zerovec::VarZeroVec::from_bytes_unchecked(b"\x01\0\0\0\0\0saka") })
                });
                static VALUES: [&<icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::DataMarker>::Yokeable; 550usize] = [&AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AS_X_3, &AS_X_3, &AS_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &BN_X_3, &BN_X_3, &BN_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &BRX_X_3, &BRX_X_3, &BRX_X_3, &BS_CYRL_X_3, &BS_CYRL_X_3, &BS_CYRL_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &CS_X_3, &CS_X_3, &CS_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &EL_X_3, &EL_X_3, &EL_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &ES_X_3, &ES_X_3, &ES_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &FA_X_3, &FA_X_3, &FA_X_3, &FF_ADLM_X_3, &FF_ADLM_X_3, &FF_ADLM_X_3, &AF_X_3, &AF_X_3, &FI_X_5, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &FR_X_5, &FY_X_3, &FY_X_3, &FY_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &GU_X_3, &GU_X_3, &GU_X_5, &AF_X_3, &AF_X_3, &AF_X_3, &HE_X_3, &HE_X_3, &HE_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &HI_X_3, &HI_X_3, &HI_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &FY_X_3, &FY_X_3, &FY_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &JA_X_3, &JA_X_3, &JA_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &KN_X_3, &KN_X_3, &KN_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &HI_X_3, &HI_X_3, &HI_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &KS_X_3, &KS_X_3, &KS_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &LO_X_3, &LO_X_3, &LO_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &HI_X_3, &HI_X_3, &HI_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &MK_X_3, &MK_X_3, &MK_X_3, &ML_X_3, &ML_X_3, &ML_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &HI_X_3, &HI_X_3, &HI_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &ES_X_3, &ES_X_3, &ES_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &NE_X_3, &NE_X_3, &NE_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &ES_X_3, &ES_X_3, &ES_X_3, &ES_X_3, &ES_X_3, &ES_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &OR_X_3, &OR_X_3, &OR_X_3, &PA_X_3, &PA_X_3, &PA_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &KS_X_3, &KS_X_3, &KS_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &MK_X_3, &MK_X_3, &MK_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &SC_X_5, &AF_X_3, &AF_X_3, &AF_X_3, &SD_X_3, &SD_X_3, &SD_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &CS_X_3, &CS_X_3, &CS_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &FY_X_3, &FY_X_3, &FY_X_3, &BS_CYRL_X_3, &BS_CYRL_X_3, &BS_CYRL_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &FY_X_3, &FY_X_3, &SV_X_5, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &TA_X_3, &TA_X_3, &TA_X_3, &TE_X_3, &TE_X_3, &TE_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &TH_X_3, &TH_X_3, &TH_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &KS_X_3, &KS_X_3, &KS_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &YUE_HANS_X_3, &YUE_HANS_X_3, &YUE_HANS_X_3, &YUE_X_3, &YUE_X_3, &YUE_X_3, &AF_X_3, &AF_X_3, &AF_X_3, &YUE_X_3, &YUE_X_3, &YUE_X_3, &YUE_HANS_X_3, &YUE_HANS_X_3, &YUE_HANS_X_3, &AF_X_3, &AF_X_3, &AF_X_3];
                static KEYS: [&str; 550usize] = ["af-x-3", "af-x-4", "af-x-5", "am-x-3", "am-x-4", "am-x-5", "ar-x-3", "ar-x-4", "ar-x-5", "as-x-3", "as-x-4", "as-x-5", "ast-x-3", "ast-x-4", "ast-x-5", "az-x-3", "az-x-4", "az-x-5", "be-x-3", "be-x-4", "be-x-5", "bg-x-3", "bg-x-4", "bg-x-5", "bgc-x-3", "bgc-x-4", "bgc-x-5", "bho-x-3", "bho-x-4", "bho-x-5", "blo-x-3", "blo-x-4", "blo-x-5", "bn-x-3", "bn-x-4", "bn-x-5", "br-x-3", "br-x-4", "br-x-5", "brx-x-3", "brx-x-4", "brx-x-5", "bs-Cyrl-x-3", "bs-Cyrl-x-4", "bs-Cyrl-x-5", "bs-x-3", "bs-x-4", "bs-x-5", "ca-x-3", "ca-x-4", "ca-x-5", "ceb-x-3", "ceb-x-4", "ceb-x-5", "chr-x-3", "chr-x-4", "chr-x-5", "cs-x-3", "cs-x-4", "cs-x-5", "csw-x-3", "csw-x-4", "csw-x-5", "cv-x-3", "cv-x-4", "cv-x-5", "cy-x-3", "cy-x-4", "cy-x-5", "da-x-3", "da-x-4", "da-x-5", "de-x-3", "de-x-4", "de-x-5", "doi-x-3", "doi-x-4", "doi-x-5", "dsb-x-3", "dsb-x-4", "dsb-x-5", "el-x-3", "el-x-4", "el-x-5", "en-x-3", "en-x-4", "en-x-5", "eo-x-3", "eo-x-4", "eo-x-5", "es-419-x-3", "es-419-x-4", "es-419-x-5", "es-AR-x-3", "es-AR-x-4", "es-AR-x-5", "es-BO-x-3", "es-BO-x-4", "es-BO-x-5", "es-BR-x-3", "es-BR-x-4", "es-BR-x-5", "es-BZ-x-3", "es-BZ-x-4", "es-BZ-x-5", "es-CL-x-3", "es-CL-x-4", "es-CL-x-5", "es-CO-x-3", "es-CO-x-4", "es-CO-x-5", "es-CR-x-3", "es-CR-x-4", "es-CR-x-5", "es-CU-x-3", "es-CU-x-4", "es-CU-x-5", "es-DO-x-3", "es-DO-x-4", "es-DO-x-5", "es-EC-x-3", "es-EC-x-4", "es-EC-x-5", "es-GT-x-3", "es-GT-x-4", "es-GT-x-5", "es-HN-x-3", "es-HN-x-4", "es-HN-x-5", "es-MX-x-3", "es-MX-x-4", "es-MX-x-5", "es-NI-x-3", "es-NI-x-4", "es-NI-x-5", "es-PA-x-3", "es-PA-x-4", "es-PA-x-5", "es-PE-x-3", "es-PE-x-4", "es-PE-x-5", "es-PR-x-3", "es-PR-x-4", "es-PR-x-5", "es-PY-x-3", "es-PY-x-4", "es-PY-x-5", "es-SV-x-3", "es-SV-x-4", "es-SV-x-5", "es-US-x-3", "es-US-x-4", "es-US-x-5", "es-UY-x-3", "es-UY-x-4", "es-UY-x-5", "es-VE-x-3", "es-VE-x-4", "es-VE-x-5", "es-x-3", "es-x-4", "es-x-5", "et-x-3", "et-x-4", "et-x-5", "eu-x-3", "eu-x-4", "eu-x-5", "fa-x-3", "fa-x-4", "fa-x-5", "ff-Adlm-x-3", "ff-Adlm-x-4", "ff-Adlm-x-5", "fi-x-3", "fi-x-4", "fi-x-5", "fil-x-3", "fil-x-4", "fil-x-5", "fo-x-3", "fo-x-4", "fo-x-5", "fr-CA-x-5", "fr-x-3", "fr-x-4", "fr-x-5", "fy-x-3", "fy-x-4", "fy-x-5", "ga-x-3", "ga-x-4", "ga-x-5", "gd-x-3", "gd-x-4", "gd-x-5", "gl-x-3", "gl-x-4", "gl-x-5", "gu-x-3", "gu-x-4", "gu-x-5", "ha-x-3", "ha-x-4", "ha-x-5", "he-x-3", "he-x-4", "he-x-5", "hi-Latn-x-3", "hi-Latn-x-4", "hi-Latn-x-5", "hi-x-3", "hi-x-4", "hi-x-5", "hr-x-3", "hr-x-4", "hr-x-5", "hsb-x-3", "hsb-x-4", "hsb-x-5", "hu-x-3", "hu-x-4", "hu-x-5", "hy-x-3", "hy-x-4", "hy-x-5", "ia-x-3", "ia-x-4", "ia-x-5", "id-x-3", "id-x-4", "id-x-5", "ie-x-3", "ie-x-4", "ie-x-5", "ig-x-3", "ig-x-4", "ig-x-5", "is-x-3", "is-x-4", "is-x-5", "it-x-3", "it-x-4", "it-x-5", "ja-x-3", "ja-x-4", "ja-x-5", "jv-x-3", "jv-x-4", "jv-x-5", "ka-x-3", "ka-x-4", "ka-x-5", "kea-x-3", "kea-x-4", "kea-x-5", "kgp-x-3", "kgp-x-4", "kgp-x-5", "kk-x-3", "kk-x-4", "kk-x-5", "km-x-3", "km-x-4", "km-x-5", "kn-x-3", "kn-x-4", "kn-x-5", "ko-x-3", "ko-x-4", "ko-x-5", "kok-x-3", "kok-x-4", "kok-x-5", "ks-Deva-x-3", "ks-Deva-x-4", "ks-Deva-x-5", "ks-x-3", "ks-x-4", "ks-x-5", "ku-x-3", "ku-x-4", "ku-x-5", "kxv-Deva-x-3", "kxv-Deva-x-4", "kxv-Deva-x-5", "kxv-Orya-x-3", "kxv-Orya-x-4", "kxv-Orya-x-5", "kxv-Telu-x-3", "kxv-Telu-x-4", "kxv-Telu-x-5", "kxv-x-3", "kxv-x-4", "kxv-x-5", "ky-x-3", "ky-x-4", "ky-x-5", "lb-x-3", "lb-x-4", "lb-x-5", "lij-x-3", "lij-x-4", "lij-x-5", "lmo-x-3", "lmo-x-4", "lmo-x-5", "lo-x-3", "lo-x-4", "lo-x-5", "lt-x-3", "lt-x-4", "lt-x-5", "lv-x-3", "lv-x-4", "lv-x-5", "mai-x-3", "mai-x-4", "mai-x-5", "mi-x-3", "mi-x-4", "mi-x-5", "mk-x-3", "mk-x-4", "mk-x-5", "ml-x-3", "ml-x-4", "ml-x-5", "mn-x-3", "mn-x-4", "mn-x-5", "mni-x-3", "mni-x-4", "mni-x-5", "mr-x-3", "mr-x-4", "mr-x-5", "ms-x-3", "ms-x-4", "ms-x-5", "mt-x-3", "mt-x-4", "mt-x-5", "my-x-3", "my-x-4", "my-x-5", "nb-x-3", "nb-x-4", "nb-x-5", "nds-x-3", "nds-x-4", "nds-x-5", "ne-x-3", "ne-x-4", "ne-x-5", "nl-x-3", "nl-x-4", "nl-x-5", "nn-x-3", "nn-x-4", "nn-x-5", "no-x-3", "no-x-4", "no-x-5", "nqo-x-3", "nqo-x-4", "nqo-x-5", "oc-x-3", "oc-x-4", "oc-x-5", "or-x-3", "or-x-4", "or-x-5", "pa-x-3", "pa-x-4", "pa-x-5", "pcm-x-3", "pcm-x-4", "pcm-x-5", "pl-x-3", "pl-x-4", "pl-x-5", "prg-x-3", "prg-x-4", "prg-x-5", "ps-x-3", "ps-x-4", "ps-x-5", "pt-x-3", "pt-x-4", "pt-x-5", "qu-x-3", "qu-x-4", "qu-x-5", "raj-x-3", "raj-x-4", "raj-x-5", "rm-x-3", "rm-x-4", "rm-x-5", "ro-x-3", "ro-x-4", "ro-x-5", "ru-x-3", "ru-x-4", "ru-x-5", "sa-x-3", "sa-x-4", "sa-x-5", "sah-x-3", "sah-x-4", "sah-x-5", "sat-x-3", "sat-x-4", "sat-x-5", "sc-x-3", "sc-x-4", "sc-x-5", "sd-Deva-x-3", "sd-Deva-x-4", "sd-Deva-x-5", "sd-x-3", "sd-x-4", "sd-x-5", "si-x-3", "si-x-4", "si-x-5", "sk-x-3", "sk-x-4", "sk-x-5", "sl-x-3", "sl-x-4", "sl-x-5", "so-x-3", "so-x-4", "so-x-5", "sq-x-3", "sq-x-4", "sq-x-5", "sr-Latn-x-3", "sr-Latn-x-4", "sr-Latn-x-5", "sr-x-3", "sr-x-4", "sr-x-5", "su-x-3", "su-x-4", "su-x-5", "sv-x-3", "sv-x-4", "sv-x-5", "sw-x-3", "sw-x-4", "sw-x-5", "syr-x-3", "syr-x-4", "syr-x-5", "szl-x-3", "szl-x-4", "szl-x-5", "ta-x-3", "ta-x-4", "ta-x-5", "te-x-3", "te-x-4", "te-x-5", "tg-x-3", "tg-x-4", "tg-x-5", "th-x-3", "th-x-4", "th-x-5", "ti-x-3", "ti-x-4", "ti-x-5", "tk-x-3", "tk-x-4", "tk-x-5", "to-x-3", "to-x-4", "to-x-5", "tok-x-3", "tok-x-4", "tok-x-5", "tr-x-3", "tr-x-4", "tr-x-5", "tt-x-3", "tt-x-4", "tt-x-5", "ug-x-3", "ug-x-4", "ug-x-5", "uk-x-3", "uk-x-4", "uk-x-5", "und-x-3", "und-x-4", "und-x-5", "ur-x-3", "ur-x-4", "ur-x-5", "uz-Cyrl-x-3", "uz-Cyrl-x-4", "uz-Cyrl-x-5", "uz-x-3", "uz-x-4", "uz-x-5", "vec-x-3", "vec-x-4", "vec-x-5", "vi-x-3", "vi-x-4", "vi-x-5", "vmw-x-3", "vmw-x-4", "vmw-x-5", "wo-x-3", "wo-x-4", "wo-x-5", "xh-x-3", "xh-x-4", "xh-x-5", "xnr-x-3", "xnr-x-4", "xnr-x-5", "yo-x-3", "yo-x-4", "yo-x-5", "yrl-x-3", "yrl-x-4", "yrl-x-5", "yue-Hans-x-3", "yue-Hans-x-4", "yue-Hans-x-5", "yue-x-3", "yue-x-4", "yue-x-5", "za-x-3", "za-x-4", "za-x-5", "zh-Hant-x-3", "zh-Hant-x-4", "zh-Hant-x-5", "zh-x-3", "zh-x-4", "zh-x-5", "zu-x-3", "zu-x-4", "zu-x-5"];
                let mut metadata = icu_provider::DataResponseMetadata::default();
                let payload = if let Ok(payload) = KEYS.binary_search_by(|k| req.locale.strict_cmp(k.as_bytes()).reverse()).map(|i| *unsafe { VALUES.get_unchecked(i) }) {
                    payload
                } else {
                    const FALLBACKER: icu::locid_transform::fallback::LocaleFallbackerWithConfig<'static> = icu::locid_transform::fallback::LocaleFallbacker::new().for_config(<icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::KeyedDataMarker>::KEY.fallback_config());
                    let mut fallback_iterator = FALLBACKER.fallback_for(req.locale.clone());
                    loop {
                        if let Ok(payload) = KEYS.binary_search_by(|k| fallback_iterator.get().strict_cmp(k.as_bytes()).reverse()).map(|i| *unsafe { VALUES.get_unchecked(i) }) {
                            metadata.locale = Some(fallback_iterator.take());
                            break payload;
                        }
                        if fallback_iterator.get().is_und() {
                            return Err(icu_provider::DataErrorKind::MissingLocale.with_req(<icu::datetime::provider::neo::IndianYearNamesV1Marker as icu_provider::KeyedDataMarker>::KEY, req));
                        }
                        fallback_iterator.step();
                    }
                };
                Ok(icu_provider::DataResponse { payload: Some(icu_provider::DataPayload::from_static_ref(payload)), metadata })
            }
        }
    };
}
